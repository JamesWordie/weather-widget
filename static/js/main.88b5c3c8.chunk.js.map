{"version":3,"sources":["api/geocode.jsx","api/weather.jsx","actions/index.jsx","components/SearchForm.jsx","components/SearchBar.jsx","components/Loading.jsx","components/Mapbox.jsx","components/ReactClock.jsx","components/LocationDetail.jsx","components/WeatherDaily.jsx","components/Weather.jsx","components/app.jsx","reducers/geocodeReducer.jsx","reducers/weatherReducer.jsx","reducers/index.jsx","index.jsx"],"names":["axios","create","baseURL","params","key","process","appid","GEOCODE","WEATHER","geocodeSearch","location","dispatch","a","geocode","get","response","result","data","results","locations","type","payload","weatherSearch","lat","long","weather","lon","exclude","units","SearchForm","props","renderInput","input","label","meta","style","width","placeholder","className","renderError","error","touched","role","initialValues","onSubmit","formValues","validate","errors","render","handleSubmit","name","component","SearchBar","fetchGeocodeAndWeather","this","React","Component","connect","getState","latLng","lng","Loading","marginTop","mapboxgl","workerClass","require","default","Map","ReactMapboxGl","accessToken","Mapbox","coords","containerStyle","height","center","anchor","coordinates","fontSize","state","ReactClock","time","useState","Date","value","setValue","useEffect","interval","setInterval","getTime","clearInterval","LocationDetail","undefined","current","locationResult","currentWeather","localTime","timezone_offset","adminArea4","adminArea1","src","map","w","icon","alt","parseInt","temp","description","sunrise","toLocaleTimeString","hour","minute","sunset","WeatherDaily","renderedDailyResult","daily","day","date","dt","Intl","DateTimeFormat","weekday","format","toLocaleDateString","month","max","min","rain","Weather","App","INITIAL_SEARCH","geocodeReducer","action","weatherReducer","combineReducers","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducers","applyMiddleware","reduxThunk","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.88b5c3c8.chunk.js","sourcesContent":["import axios from 'axios';\n\nexport default axios.create({\n  baseURL: 'https://open.mapquestapi.com/geocoding/v1',\n  params: {\n    key: process.env.REACT_APP_API_KEY_GEOCODE\n  }\n})\n","import axios from 'axios';\n\nexport default axios.create({\n  baseURL: 'https://api.openweathermap.org/data/2.5',\n  params: {\n    appid: process.env.REACT_APP_API_KEY_WEATHER\n  }\n})\n","import geocode from '../api/geocode';\nimport weather from '../api/weather';\nexport const GEOCODE = 'GEOCODE';\nexport const WEATHER = 'WEATHER';\n\n// dual action call to align geocode search to be directly followed by weather search\nexport const fetchGeocodeAndWeather = ({ location }) => async (dispatch, getState) => {\n  await dispatch(geocodeSearch(location));\n\n  const { lat } = getState().location.latLng;\n  const { lng } = getState().location.latLng;\n\n  await dispatch(weatherSearch(lat, lng));\n}\n\nexport const geocodeSearch = (location) => async dispatch => {\n  const response = await geocode.get('/address', {\n    params: {\n      location\n    }\n  });\n\n  const result = response.data.results[0].locations[0]\n\n  dispatch({ type: GEOCODE, payload: result })\n}\n\nexport const weatherSearch = (lat, long) => async dispatch => {\n  const response = await weather.get('/onecall', {\n    params: {\n      lat,\n      lon: long,\n      // come back to at later date and add in checkbox for hourly/daily, etc\n      exclude: 'hourly,minutely',\n      units: 'metric'\n    }\n  });\n\n  const result = response.data;\n\n  dispatch({ type: WEATHER, payload: result })\n}\n","import { Form, Field } from 'react-final-form'\n\nconst SearchForm = props => {\n  const validate = (formValues) => {\n    const errors = {};\n\n    if (!formValues.location) {\n      errors.location = 'You must enter a location.';\n    }\n\n    return errors;\n  }\n\n  const renderInput = ({ input, label, meta }) => {\n    return (\n      <div style={{ width: 'inherit' }}>\n        {/* <label className='form-label my-3'>{label}</label> */}\n        <input placeholder={label} className='form-control mb-1' {...input} />\n        {renderError(meta)}\n      </div>\n    );\n  }\n\n  // function to display the errors on the form if any persist\n  const renderError = ({ error, touched }) => {\n    if (touched && error) {\n      return (\n        <div className=\"alert alert-danger\" role=\"alert\">\n          <p className=\"text-muted my-0\">{error}</p>\n        </div>\n      );\n    }\n  }\n\n  const onSubmit = formValues => {\n    props.onSubmit(formValues);\n  }\n\n  return (\n    <Form\n      initialValues={props.initialValues}\n      onSubmit={onSubmit}\n      validate={validate}\n      render={({ handleSubmit }) => (\n        <form onSubmit={handleSubmit} className='my-3 d-inline-flex justify-content-evenly align-items-baseline w-100'>\n          <Field name='location' component={renderInput} label='Enter Your Location' />\n          <button className=\"btn btn-outline-primary ms-1\">Search</button>\n        </form>\n      )}\n    />\n  );\n}\n\nexport default SearchForm;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { fetchGeocodeAndWeather } from '../actions';\nimport SearchForm from './SearchForm';\n\nclass SearchBar extends React.Component {\n  onSubmit = formValues => {\n    this.props.fetchGeocodeAndWeather(formValues)\n  }\n\n  // once component had mounted on the screen it will make a search for Edinburgh (or a defualt value)\n  componentDidMount() {\n    this.props.fetchGeocodeAndWeather({ location: 'Edinburgh'});\n  }\n\n  render() {\n    return (\n      <div className=\"row justify-content-center search-bar\">\n        <div className=\"col-8\">\n          <SearchForm onSubmit={this.onSubmit} />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default connect(null, { fetchGeocodeAndWeather })(SearchBar);\n","import React from 'react';\n\nconst Loading = () => {\n  return (\n    <div className=\"row justify-content-center align-items-center my-5\">\n      <div className=\"col-6 text-center d-inline-flex justify-content-center align-items-center w-100\"\n        style={{ marginTop: '40vh' }}\n      >\n        <span className=\"mx-4\">Make your search now..</span>\n        <div className=\"spinner-border text-info\" role=\"status\">\n          <span className=\"visually-hidden\">Loading...</span>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Loading;\n","import React from 'react';\nimport ReactMapboxGl, { Marker } from 'react-mapbox-gl';\nimport { connect } from 'react-redux';\n\n// following lines down to 10 all required to exclude mapbox from trans=pilation errors\nimport 'mapbox-gl/dist/mapbox-gl.css';\nimport mapboxgl from 'mapbox-gl';\n\n// eslint-disable-next-line import/no-webpack-loader-syntax\nmapboxgl.workerClass = require('worker-loader!mapbox-gl/dist/mapbox-gl-csp-worker').default;\n\nexport const Map = ReactMapboxGl({\n  accessToken: process.env.REACT_APP_API_KEY_MAPBOX\n})\n\nclass Mapbox extends React.Component {\n  render() {\n    let { lat } = this.props.coords;\n    let { lon } = this.props.coords;\n\n    if (this.props.coords.location === 'Edinburgh') {\n      return null;\n    }\n    return (\n      <Map\n        style=\"mapbox://styles/mapbox/streets-v9\"\n        containerStyle={{\n          height: '250px',\n          width: '100%'\n        }}\n        center={[lon, lat]}\n      >\n        <Marker\n          anchor='center'\n          coordinates={[lon, lat]}\n        >\n          <i className=\"fas fa-map-marker-alt text-danger\" style={{ fontSize: '24px' }}></i>\n        </Marker>\n      </Map>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return { coords: state.weather }\n}\n\nexport default connect(mapStateToProps, {})(Mapbox);\n","import React, { useEffect, useState }  from 'react';\nimport Clock from 'react-clock';\n\nconst ReactClock = ({ time }) => {\n  const [value, setValue] = useState(new Date());\n\n  useEffect(() => {\n    const interval = setInterval(\n      () => setValue((new Date(new Date().getTime() + (time * 60 * 1000)))),\n      1000\n    );\n\n    return () => {\n      clearInterval(interval);\n    }\n  }, [time]);\n\n  return (\n    <>\n      <Clock value={value} />\n    </>\n  )\n}\n\nexport default ReactClock;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport Loading from './Loading';\nimport Mapbox from './Mapbox';\n// import Clock from './Clock';\nimport ReactClock from './ReactClock';\n\nclass LocationDetail extends React.Component {\n  render() {\n    const { location } = this.props.location;\n\n    if (location === 'Edinburgh') {\n      return (\n        <Loading />\n      );\n    }\n\n    if (this.props.weather.current === undefined) {\n      return <Loading />\n    }\n\n    const locationResult = this.props.location;\n    const currentWeather = this.props.weather.current;\n\n    const localTime = (this.props.weather.timezone_offset - 3600);\n    return (\n      <div className=\"col-lg-4 col-12 my-5 d-flex flex-column justify-content-between\">\n        <div className=\"card\">\n          <div className=\"card-body\">\n            <span className=\"d-inline-flex justify-content-between w-100 align-items-center\">\n              <div className=\"d-inline-flex align-items-end\">\n                <h4 className=\"card-title me-2\">{locationResult.adminArea4}</h4>\n                <h6 className=\"card-title ml-2\">{locationResult.adminArea1}</h6>\n              </div>\n              <img src={`http://openweathermap.org/img/wn/${currentWeather.weather.map(w => w.icon)}@2x.png`} alt=\"weather.icon\" />\n            </span>\n            <span className=\"d-inline-flex justify-content-between w-100 align-items-center\">\n              <h3 className=\"card-subtitle text-bold\">{parseInt(currentWeather.temp)} C</h3>\n              <p className=\"card-text\">{currentWeather.weather.map(w => w.description)}</p>\n            </span>\n            <span className=\"d-inline-flex mt-3 w-50 justify-content-between\">\n              <p className=\"me-2 text-warning\"><i className=\"fas fa-sun\"></i> {new Date(currentWeather.sunrise * 1000).toLocaleTimeString('en-UK', {hour: '2-digit', minute: '2-digit'})}</p>\n              <p className=\"me-2 text-dark\"><i className=\"fas fa-moon\"></i> {new Date(currentWeather.sunset * 1000).toLocaleTimeString('en-UK', {hour: '2-digit', minute: '2-digit'})}</p>\n            </span>\n          </div>\n        </div>\n        <div className=\"card mt-4\">\n          <Mapbox />\n        </div>\n        <div className=\"card mt-4 p-5 clock-card\">\n          {/* <Clock time={localTime} /> */}\n          <ReactClock time={localTime} />\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return { location: state.location, weather: state.weather }\n}\n\nexport default connect(mapStateToProps, {})(LocationDetail);\n","import React from 'react';\nimport { connect } from 'react-redux';\n\nclass WeatherDaily extends React.Component {\n  renderedDailyResult = (daily) => {\n    if (daily) {\n      return (\n        daily.map((day) => {\n          const date = new Date(day.dt * 1000);\n          return (\n            <div className=\"col\" key={day.dt}>\n              <div className=\"card h-100\">\n                <div className=\"card-header\">\n                  <h5 className=\"card-title text-center\">{new Intl.DateTimeFormat('en-UK', { weekday: 'long' }).format(date)}</h5>\n                  <h5 className=\"card-subtitle text-muted text-center\">{date.toLocaleDateString('en-UK', {day: '2-digit', month: '2-digit'})}</h5>\n                </div>\n                <div className=\"card-body\">\n                  <div className=\"card-text\">\n                    <div className=\"row justify-content-evenly align-items-center\">\n                      <div className=\"col-lg-6 text-center\">\n                        <img alt=\"weather icon\" src={`http://openweathermap.org/img/wn/${day.weather.map(w => w.icon)}@2x.png`} />\n                      </div>\n                      <div className=\"col-lg-6 text-center\">\n                        <div className=\"d-flex flex-column\">\n                          <h6 className='text-danger temp'>{parseInt(day.temp.max)} C</h6>\n                          <h6 className=\"text-info temp\">{parseInt(day.temp.min)} C</h6>\n                        </div>\n                      </div>\n                      <div className=\"col-lg-6 text-center\">{day.weather.map(w => w.description)}</div>\n                      <div className=\"col-lg-6 text-center\">\n                        <span className=\"d-inline-flex\">\n                          <i className=\"fas fa-umbrella\"></i>\n                          <h6 className=\"ml-2\">{day.rain ? parseInt(day.rain * 10) : 0}%</h6>\n                        </span>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          );\n        })\n      );\n    }\n  }\n\n  render() {\n    const {daily} = this.props.weather;\n    return (\n      <div className=\"row row-cols-1 row-cols-md-2 row-cols-lg-3 g-3\">\n        {this.renderedDailyResult(daily)}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return { weather: state.weather }\n}\n\nexport default connect(mapStateToProps, {})(WeatherDaily);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport WeatherDaily from './WeatherDaily';\n\nclass Weather extends React.Component {\n  render() {\n    if (this.props.weather.location === 'Edinburgh') {\n      return null;\n    }\n    return (\n      <div className=\"col-lg-8 my-5\">\n        <>\n          <WeatherDaily />\n        </>\n      </div>\n    );\n  }\n};\n\nconst mapStateToProps = state => {\n  return { weather: state.weather }\n}\n\nexport default connect(mapStateToProps, {})(Weather);\n","import React from 'react';\nimport SearchBar from './SearchBar';\nimport LocationDetail from './LocationDetail';\nimport Weather from './Weather'\n// import Mapbox from './Mapbox';\n\nconst App = () => {\n  return (\n    <div>\n      <>\n          <SearchBar />\n      </>\n      <div className=\"container\">\n        <div className=\"row\">\n          <>\n            <LocationDetail />\n          </>\n          <>\n            <Weather />\n          </>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","import { GEOCODE } from '../actions/index';\n\nconst INITIAL_SEARCH = {\n  location: 'Edinburgh'\n}\n\nconst geocodeReducer  = (state = INITIAL_SEARCH, action) => {\n  switch (action.type) {\n    case GEOCODE:\n      return action.payload;\n    default:\n      return state;\n  }\n}\n\nexport default geocodeReducer;\n","import { WEATHER } from '../actions/index';\n\nconst INITIAL_SEARCH = {\n  location: 'Edinburgh'\n}\n\nconst weatherReducer  = (state = INITIAL_SEARCH, action) => {\n  switch (action.type) {\n    case WEATHER:\n      return action.payload;\n    default:\n      return state;\n  }\n}\n\nexport default weatherReducer;\n","import { combineReducers } from 'redux';\nimport geocodeReducer from './geocodeReducer';\nimport weatherReducer from './weatherReducer';\n\nexport default combineReducers({\n  location: geocodeReducer,\n  weather: weatherReducer\n});\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport reduxThunk from 'redux-thunk';\n\nimport 'bootstrap/dist/css/bootstrap.css';\nimport 'mapbox-gl/dist/mapbox-gl.css';\nimport App from './components/app';\nimport reducers from './reducers';\nimport './index.css';\nimport 'react-clock/dist/Clock.css';\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(\n  reducers,\n  composeEnhancers(applyMiddleware(reduxThunk))\n);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}